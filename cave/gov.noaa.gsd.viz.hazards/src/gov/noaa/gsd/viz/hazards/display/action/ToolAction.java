/**
 * This software was developed and / or modified by the
 * National Oceanic and Atmospheric Administration (NOAA), 
 * Earth System Research Laboratory (ESRL), 
 * Global Systems Division (GSD), 
 * Information Services Branch (ISB)
 * 
 * Address: Department of Commerce Boulder Labs, 325 Broadway, Boulder, CO 80305
 */
package gov.noaa.gsd.viz.hazards.display.action;

import gov.noaa.gsd.viz.mvp.IAction;

import java.util.List;

import com.raytheon.uf.common.dataplugin.events.EventSet;
import com.raytheon.uf.common.dataplugin.events.IEvent;
import com.raytheon.uf.common.hazards.productgen.IGeneratedProduct;

/**
 * Tool action, generated by <code>ToolDialog</code>. The tool dialog is
 * generated from "dialog JSON" associated with tools in the data transformation
 * framework. The tool dialog provides user-input required to run a tool.
 * 
 * <pre>
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Jan, 2012               Chris.Golden      Initial induction into repo
 * 3/22/13                 Bryon.Lawrence    Added support for asynchronous results
 *                                           from recommenders and product generators.
 *                                           Added enum for action types.
 * </pre>
 * 
 * @author Chris Golden
 */
public class ToolAction implements IAction {

    /**
     * Types of actions supported by ToolAction.
     */
    public enum ToolActionEnum {
        RUN_TOOL_WITH_PARAMETERS, RUN_TOOL, TOOL_RECOMMENDATIONS, PRODUCTS_GENERATED
    };

    // Private Variables

    /**
     * Identifier of the action that occurred.
     */
    private ToolActionEnum action;

    /**
     * Detail text, if any.
     */
    private String details;

    /**
     * Auxiliary details text, if any.
     */
    private String aux;

    /**
     * List of recommender generated events, if any.
     */
    private EventSet<IEvent> recommendedEventList;

    /**
     * List of generated products, if any.
     */
    private List<IGeneratedProduct> productList;

    // Public Constructors

    /**
     * Construct a standard instance with no additional details.
     * 
     * @param action
     *            Identifier of the action that is occurring.
     */
    public ToolAction(ToolActionEnum action) {
        this(action, null);
    }

    /**
     * Construct a standard instance.
     * 
     * @param action
     *            Identifier of the action that is occurring.
     * @param details
     *            Optional JSON string giving additional details.
     */
    public ToolAction(ToolActionEnum action, String details) {
        this.action = action;
        this.details = details;
    }

    /**
     * Construct a standard instance.
     * 
     * @param action
     *            Identifier of the action that is occurring.
     * @param details
     *            Optional JSON string giving additional details.
     * @param aux
     *            Optional JSON string giving auxiliary details.
     */
    public ToolAction(ToolActionEnum action, String details, String aux) {
        this.action = action;
        this.details = details;
        this.aux = aux;
    }

    /**
     * Construct an action instance for handling recommender results.
     * 
     * @param action
     *            Identifier of the action that is occurring.
     * @param eventList
     *            List of recommended events
     * @param aux
     *            Name of the tool which generated these events
     */
    public ToolAction(ToolActionEnum action, EventSet<IEvent> eventList,
            String aux) {
        this.action = action;
        this.recommendedEventList = eventList;
        this.aux = aux;
    }

    /**
     * Construct an action instance for handling product generator results.
     * 
     * @param action
     *            Identifier of the action that is occurring.
     * @param productList
     *            List of recommended events
     * @param aux
     *            Name of the tool which generated these events
     */
    public ToolAction(ToolActionEnum action, String aux,
            List<IGeneratedProduct> productList) {
        this.action = action;
        this.productList = productList;
        this.aux = aux;
    }

    // Public Methods

    /**
     * Get the action identifier.
     * 
     * @return Action identifier.
     */
    public ToolActionEnum getAction() {
        return action;
    }

    /**
     * Set the action identifier as specified.
     * 
     * @param action
     *            New action identifier.
     */
    public void setAction(ToolActionEnum action) {
        this.action = action;
    }

    /**
     * Get the additional details.
     * 
     * @return JSON string giving additional details.
     */
    public String getDetails() {
        return details;
    }

    /**
     * Set the additional details as specified.
     * 
     * @param jsonText
     *            JSON string giving additional details.
     */
    public void setJSONText(String details) {
        this.details = details;
    }

    /**
     * Get the auxiliary details.
     * 
     * @return JSON string giving auxiliary details.
     */
    public String getAuxiliaryDetails() {
        return aux;
    }

    /**
     * @param recommendedEventList
     *            the recommended event list to set
     */
    public void setRecommendedEventList(EventSet<IEvent> recommendedEventList) {
        this.recommendedEventList = recommendedEventList;
    }

    /**
     * @return the recommended event list
     */
    public EventSet<IEvent> getRecommendedEventList() {
        return recommendedEventList;
    }

    /**
     * @param productList
     *            the generated product list to set
     */
    public void setProductList(List<IGeneratedProduct> productList) {
        this.productList = productList;
    }

    /**
     * @return the generated product list
     */
    public List<IGeneratedProduct> getProductList() {
        return productList;
    }
}
