#!/usr/bin/env python

import os
import sys
import subprocess
import json
import traceback
import unittest

# Client provides lists of extra paths added to the sys.path data structure,
# which controls the directories one can import from.
# These are fromRoot, which are relative to the root directory, and fromHere,
# which are relative to the directory this source code is in.
# The root directory is lowest directory above source code directory
# with name of rootName.  Also pulls out any paths that are in the EDEX
# utility directories.
def updateSysPath(rootName, fromRoot, fromHere) :

    # Get absolute path to this source code using current working directory
    # and contents of __file__ variable.
    here = os.environ["PWD"]
    me = __file__
    if me[0]!="/" :
        me = here+"/"+me

    # Break this path into its individual directory parts and locate the
    # "root" part.
    pathList = []
    pathParts = me.split("/")
    m = len(pathParts)-1
    basename = pathParts[m]
    pathParts = pathParts[:m]
    nparts = 0
    rootPart = -1
    ok = False
    for part in pathParts :
        if part == '.' :
            pass
        elif part == '..' :
            nparts = nparts - 1
            pathList = pathList[0:nparts]
        elif len(part)>0 :
            nparts = nparts + 1
            pathList.append(part)
        if part == rootName :
            rootPart = nparts

    if rootPart < 0 :
        sys.stderr.write("location of "+basename+" does not make sense\n")
        exit()

    # Reconstitute full paths to the root directory and the source code
    # directory.
    hsRoot = ""
    for part in pathList[0:rootPart] :
        hsRoot += "/"+part
    meDir = hsRoot
    for part in pathList[rootPart:] :
        meDir += "/"+part

    # Initialize with current contents of sys.path, and add all the
    # requested paths.
    pyPathParts = sys.path
    if isinstance(fromRoot, str) or isinstance(fromRoot, unicode) :
        pyPathParts.append(hsRoot+"/"+fromRoot)
    elif isinstance(fromRoot, list) or isinstance(fromRoot, tuple) :
        for part in fromRoot :
            pyPathParts.append(hsRoot+"/"+part)
    if isinstance(fromHere, str) or isinstance(fromHere, unicode) :
        pyPathParts.append(meDir+"/"+fromHere)
    elif isinstance(fromHere, list) or isinstance(fromHere, tuple) :
        for part in fromHere :
             pyPathParts.append(meDir+"/"+part)
    pyPathParts.append(meDir)

    # Eliminate redundancies and paths to EDEX localization file directories.
    newPyPath = []
    for part in pyPathParts :
        if part.find("edex/data/utility")>=0 :
            continue
        if not part in newPyPath :
            newPyPath.append(part)

    sys.path = newPyPath

# This is a unit test of the track initializer, StormTrackTool.
class TestStormTrack(unittest.TestCase):

    # Here we set up the exact set of paths we need in the PYTHONPATH
    # environment variable so we can access the code we need.
    def setUp(self):
        edexPython = \
         "edexOsgi/gov.noaa.gsd.common.utilities/utility/"+ \
         "common_static/base/python"
        recommenderPython = \
          "edexOsgi/gov.noaa.gsd.uf.common.recommenders.hydro/utility/"+ \
          "common_static/base/python/events/recommenders"
        fromRoot = []
        fromRoot.append(edexPython+"/geoUtilities")
        fromRoot.append(edexPython+"/trackUtilities")
        fromRoot.append(edexPython+"/generalUtilities")
        fromRoot.append(edexPython+"/logUtilities")
        fromRoot.append(edexPython+"/bridge")
        fromRoot.append(recommenderPython)
        updateSysPath("hazardServices", fromRoot, "config")

    def test_StormTrack1(self) :
        # Multiple frames generated by Hazard Services
        from StormTrackTool import Recommender

        sessionAttributes = \
        {
            "selectedTime": "1297137600002", 
            "staticSettings": {
                "settingsID": "TOR", 
                "hidHazardCategories": [
                    "Short Fused"
                ], 
                "defaultBaseLayer": "Google Hybrid", 
                "hazardsFilter": "TOR", 
                "visibleTypes": [
                    "TO.W", 
                    "SV.W", 
                    "EW.W"
                ], 
                "radar": "true", 
                "defaultVectorLayers": [], 
                "controlLayers": [
                    "Hazards", 
                    "LandScan Population", 
                    "CO Gov", 
                    "CO Airports", 
                    "USA WFO Locations", 
                    "USA EM State Offices", 
                    "CO EOC Offices"
                ], 
                "caveSettings": "True", 
                "pointHazardShape": "triangle", 
                "hazardCategoriesAndTypes": [
                    {
                        "displayString": "Convective", 
                        "children": [
                            "TO.W", 
                            "SV.W", 
                            "EW.W"
                        ]
                    }
                ], 
                "draggedTrackPointShape": "star", 
                "visibleStates": [
                    "potential", 
                    "proposed", 
                    "pending", 
                    "issued", 
                    "ended"
                ], 
                "toolbarTools": [
                    {
                        "toolName": "StormTrackTool", 
                        "displayName": "Storm Track"
                    }
                ], 
                "defaultControlLayers": [
                    "Hazards"
                ], 
                "defaultTimeDisplayDuration": 14400000, 
                "trackPointShape": "circle", 
                "maxDuration": 90, 
                "columns": {
                    "VTEC Code": {
                        "type": "string", 
                        "fieldName": "vtecCode", 
                        "sortDir": "none"
                    }, 
                    "Issue Time": {
                        "fieldName": "issueTime", 
                        "width": 123, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "Hazard Type": {
                        "type": "string", 
                        "fieldName": "type", 
                        "sortDir": "ascending", 
                        "hintTextFieldName": "headline"
                    }, 
                    "Description": {
                        "fieldName": "description", 
                        "width": 100, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "State": {
                        "fieldName": "state", 
                        "width": 60, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "Site ID": {
                        "type": "string", 
                        "fieldName": "siteID", 
                        "sortDir": "none"
                    }, 
                    "Phen": {
                        "fieldName": "phen", 
                        "width": 50, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "Start Time": {
                        "fieldName": "startTime", 
                        "width": 126, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "End Time": {
                        "fieldName": "endTime", 
                        "width": 128, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "Sig": {
                        "fieldName": "sig", 
                        "width": 50, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "ETN": {
                        "type": "number", 
                        "fieldName": "ETN", 
                        "sortDir": "none"
                    }, 
                    "Purge Time": {
                        "fieldName": "purgeTime", 
                        "width": 130, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "Event ID": {
                        "type": "string", 
                        "fieldName": "eventID", 
                        "sortDir": "none"
                    }
                }, 
                "mapCenter": {
                    "lat": 39.29999923706055, 
                    "lon": -104.69999694824219, 
                    "zoom": 7
                }, 
                "defaultSiteID": "BOU", 
                "temporalCounts": {
                    "distance": 12, 
                    "step": 2000, 
                    "panDistance": 7200000, 
                    "loopCount": 0, 
                    "increment": 300000
                }, 
                "defaultCategory": "Convective", 
                "visibleSites": [
                    "BOU", 
                    "OAX"
                ], 
                "displayName": "Canned TOR", 
                "defaultDuration": 1800000, 
                "visibleColumns": [
                    "Event ID", 
                    "Hazard Type", 
                    "State", 
                    "Start Time", 
                    "End Time"
                ], 
                "defaultImageLayers": [], 
                "durationIncrement": 1, 
                "defaultHazardCategory": "shortFused"
            }, 
            "framesInfo": {
                "frameTimeList": [
                    1297127700002, 
                    1297128600002, 
                    1297129500002, 
                    1297130400002, 
                    1297131300002, 
                    1297132200002, 
                    1297133100002, 
                    1297134000002, 
                    1297134900002, 
                    1297135800002, 
                    1297136700002, 
                    1297137600002
                ], 
                "frameIndex": 11, 
                "frameCount": 12
            }, 
            "currentTime": "1297137600002"
        }
        dialogInputMap = {}
        spatialInputMap = \
        {
            "spatialInfo": {
                "points": [
                    [
                        [
                            41.678001403808594, 
                            -96.05570983886719
                        ], 
                        1297137600
                    ]
                ]
            }
        }

        recommenderObject = Recommender()
        result = recommenderObject.executeImpl( \
                 sessionAttributes, dialogInputMap, spatialInputMap)

        expectedResult = \
        {
            "pivots": [
                1297137600000
            ], 
            "stormMotion": {
                "bearing": 225, 
                "speed": 20
            }, 
            "creationTime": 1297137600002, 
            "modifyCallbackToolName": "ModifyStormTrackTool", 
            "shapes": [
                {
                    "pointType": "tracking", 
                    "pointID": 1297127700002, 
                    "shapeType": "point", 
                    "point": [
                        -96.91439303660216, 
                        41.026992993078025
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297128600002, 
                    "shapeType": "point", 
                    "point": [
                        -96.83703743623923, 
                        41.08643777091382
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297129500002, 
                    "shapeType": "point", 
                    "point": [
                        -96.75954181189822, 
                        41.14583072231403
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297130400002, 
                    "shapeType": "point", 
                    "point": [
                        -96.68190573898683, 
                        41.205171644656566
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297131300002, 
                    "shapeType": "point", 
                    "point": [
                        -96.60412879224614, 
                        41.26446033453866
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297132200002, 
                    "shapeType": "point", 
                    "point": [
                        -96.52621054575648, 
                        41.32369658777414
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297133100002, 
                    "shapeType": "point", 
                    "point": [
                        -96.44815057294345, 
                        41.38288019939084
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297134000002, 
                    "shapeType": "point", 
                    "point": [
                        -96.36994844658396, 
                        41.44201096362786
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297134900002, 
                    "shapeType": "point", 
                    "point": [
                        -96.29160373881251, 
                        41.50108867393298
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297135800002, 
                    "shapeType": "point", 
                    "point": [
                        -96.21311602112736, 
                        41.56011312295996
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297136700002, 
                    "shapeType": "point", 
                    "point": [
                        -96.13448486439712, 
                        41.61908410256591
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297137600002, 
                    "shapeType": "point", 
                    "point": [
                        -96.05570983886719, 
                        41.6780014038086
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297138500002, 
                    "shapeType": "point", 
                    "point": [
                        -95.9767905141664, 
                        41.73686481694388
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297139400002, 
                    "shapeType": "point", 
                    "point": [
                        -95.89772645931387, 
                        41.79567413142298
                    ]
                }, 
                {
                    "include": "true", 
                    "shapeType": "polygon", 
                    "points": [
                        [
                            -95.89733420176434, 
                            41.954677871118676
                        ], 
                        [
                            -95.68445070416145, 
                            41.79518488004291
                        ], 
                        [
                            -96.05570973414375, 
                            41.55079818275179
                        ], 
                        [
                            -96.22601932552439, 
                            41.6778757723856
                        ]
                    ]
                }
            ], 
            "state": "pending", 
            "draggedPoints": [
                [
                    [
                        -96.05570983886719, 
                        41.678001403808594
                    ], 
                    1297137600000
                ]
            ], 
            "startTime": 1297137600002, 
            "endTime": 1297139400002, 
            "type": "TO.W"
        }

        self.assertEqual(json.dumps(result, sort_keys=True), \
                         json.dumps(expectedResult, sort_keys=True) )

    def test_StormTrack2(self) :
        # Single frame case.
        from StormTrackTool import Recommender

        sessionAttributes = \
        {
            "selectedTime": "1297137600002", 
            "staticSettings": {
                "settingsID": "TOR", 
                "hidHazardCategories": [
                    "Short Fused"
                ], 
                "defaultBaseLayer": "Google Hybrid", 
                "hazardsFilter": "TOR", 
                "visibleTypes": [
                    "TO.W", 
                    "SV.W", 
                    "EW.W"
                ], 
                "radar": "true", 
                "defaultVectorLayers": [], 
                "controlLayers": [
                    "Hazards", 
                    "LandScan Population", 
                    "CO Gov", 
                    "CO Airports", 
                    "USA WFO Locations", 
                    "USA EM State Offices", 
                    "CO EOC Offices"
                ], 
                "caveSettings": "True", 
                "pointHazardShape": "triangle", 
                "hazardCategoriesAndTypes": [
                    {
                        "displayString": "Convective", 
                        "children": [
                            "TO.W", 
                            "SV.W", 
                            "EW.W"
                        ]
                    }
                ], 
                "draggedTrackPointShape": "star", 
                "visibleStates": [
                    "potential", 
                    "proposed", 
                    "pending", 
                    "issued", 
                    "ended"
                ], 
                "toolbarTools": [
                    {
                        "toolName": "StormTrackTool", 
                        "displayName": "Storm Track"
                    }
                ], 
                "defaultControlLayers": [
                    "Hazards"
                ], 
                "defaultTimeDisplayDuration": 14400000, 
                "trackPointShape": "circle", 
                "maxDuration": 90, 
                "columns": {
                    "VTEC Code": {
                        "type": "string", 
                        "fieldName": "vtecCode", 
                        "sortDir": "none"
                    }, 
                    "Issue Time": {
                        "fieldName": "issueTime", 
                        "width": 123, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "Hazard Type": {
                        "type": "string", 
                        "fieldName": "type", 
                        "sortDir": "ascending", 
                        "hintTextFieldName": "headline"
                    }, 
                    "Description": {
                        "fieldName": "description", 
                        "width": 100, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "State": {
                        "fieldName": "state", 
                        "width": 60, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "Site ID": {
                        "type": "string", 
                        "fieldName": "siteID", 
                        "sortDir": "none"
                    }, 
                    "Phen": {
                        "fieldName": "phen", 
                        "width": 50, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "Start Time": {
                        "fieldName": "startTime", 
                        "width": 126, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "End Time": {
                        "fieldName": "endTime", 
                        "width": 128, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "Sig": {
                        "fieldName": "sig", 
                        "width": 50, 
                        "type": "string", 
                        "sortDir": "none"
                    }, 
                    "ETN": {
                        "type": "number", 
                        "fieldName": "ETN", 
                        "sortDir": "none"
                    }, 
                    "Purge Time": {
                        "fieldName": "purgeTime", 
                        "width": 130, 
                        "type": "date", 
                        "sortDir": "none"
                    }, 
                    "Event ID": {
                        "type": "string", 
                        "fieldName": "eventID", 
                        "sortDir": "none"
                    }
                }, 
                "mapCenter": {
                    "lat": 39.29999923706055, 
                    "lon": -104.69999694824219, 
                    "zoom": 7
                }, 
                "defaultSiteID": "BOU", 
                "temporalCounts": {
                    "distance": 12, 
                    "step": 2000, 
                    "panDistance": 7200000, 
                    "loopCount": 0, 
                    "increment": 300000
                }, 
                "defaultCategory": "Convective", 
                "visibleSites": [
                    "BOU", 
                    "OAX"
                ], 
                "displayName": "Canned TOR", 
                "defaultDuration": 1800000, 
                "visibleColumns": [
                    "Event ID", 
                    "Hazard Type", 
                    "State", 
                    "Start Time", 
                    "End Time"
                ], 
                "defaultImageLayers": [], 
                "durationIncrement": 1, 
                "defaultHazardCategory": "shortFused"
            }, 
            "framesInfo": {
                "frameTimeList": [
                    1297137600002
                ], 
                "frameIndex": 0, 
                "frameCount": 1
            }, 
            "currentTime": "1297137600002"
        }
        dialogInputMap = {}
        spatialInputMap = \
        {
            "spatialInfo": {
                "points": [
                    [
                        [
                            41.98193359375, 
                            -96.24107360839844
                        ], 
                        1297137600
                    ]
                ]
            }
        }

        recommenderObject = Recommender()
        result = recommenderObject.executeImpl( \
                 sessionAttributes, dialogInputMap, spatialInputMap)

        expectedResult = \
        {
            "pivots": [
                1297137600000
            ], 
            "stormMotion": {
                "bearing": 225, 
                "speed": 20
            }, 
            "creationTime": 1297137600002, 
            "modifyCallbackToolName": "ModifyStormTrackTool", 
            "shapes": [
                {
                    "pointType": "tracking", 
                    "pointID": 1297137600002, 
                    "shapeType": "point", 
                    "point": [
                        -96.24107360839844, 
                        41.98193359375
                    ]
                }, 
                {
                    "pointType": "tracking", 
                    "pointID": 1297139400002, 
                    "shapeType": "point", 
                    "point": [
                        -96.08233523807331, 
                        42.0996051604707
                    ]
                }, 
                {
                    "include": "true", 
                    "shapeType": "polygon", 
                    "points": [
                        [
                            -96.08193686043711, 
                            42.258608894363356
                        ], 
                        [
                            -95.86804029496534, 
                            42.0991106590306
                        ], 
                        [
                            -96.24107350317884, 
                            41.854730372693176
                        ], 
                        [
                            -96.41219362363283, 
                            41.9818066132438
                        ]
                    ]
                }
            ], 
            "state": "pending", 
            "draggedPoints": [
                [
                    [
                        -96.24107360839844, 
                        41.98193359375
                    ], 
                    1297137600000
                ]
            ], 
            "startTime": 1297137600002, 
            "endTime": 1297139400002, 
            "type": "TO.W"
        }

        self.assertEqual(json.dumps(result, sort_keys=True), \
                         json.dumps(expectedResult, sort_keys=True) )

if __name__ == '__main__':
    unittest.main()
#
